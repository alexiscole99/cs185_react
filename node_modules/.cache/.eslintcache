[{"/Users/alexiscole/Documents/cs185/cs185_react/src/index.js":"1","/Users/alexiscole/Documents/cs185/cs185_react/src/App.js":"2","/Users/alexiscole/Documents/cs185/cs185_react/src/reportWebVitals.js":"3","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Tablist.js":"4","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Body.js":"5","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ImageGallery.js":"6","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Table.js":"7","/Users/alexiscole/Documents/cs185/cs185_react/src/components/VideoGallery.js":"8","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Text.js":"9","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Email.js":"10","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Tab.js":"11","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ImgModal.js":"12","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Images.js":"13","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ScrollButton.js":"14","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Videos.js":"15","/Users/alexiscole/Documents/cs185/cs185_react/src/components/VidModal.js":"16","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Image.js":"17","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Video.js":"18","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Zoom.js":"19","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/AddTask.js":"20","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Tasks.js":"21","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Header.js":"22","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/UpdateTask.js":"23","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Task.js":"24"},{"size":500,"mtime":1615074639801,"results":"25","hashOfConfig":"26"},{"size":906,"mtime":1615171322690,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1615074639802,"results":"28","hashOfConfig":"26"},{"size":372,"mtime":1615074636609,"results":"29","hashOfConfig":"26"},{"size":2753,"mtime":1615345551870,"results":"30","hashOfConfig":"26"},{"size":3626,"mtime":1615440612996,"results":"31","hashOfConfig":"26"},{"size":2135,"mtime":1615074636609,"results":"32","hashOfConfig":"26"},{"size":1941,"mtime":1615074636610,"results":"33","hashOfConfig":"26"},{"size":1235,"mtime":1615074636609,"results":"34","hashOfConfig":"26"},{"size":1442,"mtime":1615171717341,"results":"35","hashOfConfig":"26"},{"size":543,"mtime":1615074636608,"results":"36","hashOfConfig":"26"},{"size":885,"mtime":1615074636608,"results":"37","hashOfConfig":"26"},{"size":358,"mtime":1615074636608,"results":"38","hashOfConfig":"26"},{"size":450,"mtime":1615074636608,"results":"39","hashOfConfig":"26"},{"size":312,"mtime":1615074636610,"results":"40","hashOfConfig":"26"},{"size":931,"mtime":1615074636609,"results":"41","hashOfConfig":"26"},{"size":503,"mtime":1615074636607,"results":"42","hashOfConfig":"26"},{"size":551,"mtime":1615074636610,"results":"43","hashOfConfig":"26"},{"size":2959,"mtime":1615420435514,"results":"44","hashOfConfig":"26"},{"size":2353,"mtime":1615418247846,"results":"45","hashOfConfig":"26"},{"size":376,"mtime":1615347952854,"results":"46","hashOfConfig":"26"},{"size":500,"mtime":1615419003063,"results":"47","hashOfConfig":"26"},{"size":2832,"mtime":1615425739876,"results":"48","hashOfConfig":"26"},{"size":1126,"mtime":1615416969867,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"10z5zh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/alexiscole/Documents/cs185/cs185_react/src/index.js",[],["105","106"],"/Users/alexiscole/Documents/cs185/cs185_react/src/App.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/reportWebVitals.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Tablist.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Body.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/ImageGallery.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Table.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/VideoGallery.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Text.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Email.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Tab.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/ImgModal.js",["107"],"import React, { Component } from 'react';\nimport '../App.css';\n\nclass ImgModal extends Component {\n\n    constructor (props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = (e) => {\n        if(e.target.className !== \"modal-content-landscape\" || e.target.className !== \"modal-content-portrait\") {\n            this.props.closeModal();\n        }\n    }\n\n    render() {\n        \n        return (\n            <div \n                className=\"modal\" \n                style={{display: this.props.showModal ? 'block' : 'none'}}\n                onClick={this.handleClick}\n            >\n                <div className={this.props.customStyle[1]}>\n                    <img src={this.props.modalSrc} id={this.props.srcId} style={this.props.customStyle[0]}/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ImgModal;","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Images.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/ScrollButton.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/Videos.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/VidModal.js",["108"],"import React, { Component } from 'react';\nimport '../App.css';\n\nclass VidModal extends Component {\n\n    constructor (props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = (e) => {\n        if(e.target.className !== \"modal-content-video\") {\n            this.props.closeModal();\n        }\n    }\n\n    render() {\n        return (\n            <div \n                className=\"modal\" \n                style={{display: this.props.showModal ? 'block' : 'none'}}\n                onClick={this.handleClick}\n            >\n                <div className=\"modal-content-video\">\n                    <iframe \n                        id={this.props.srcId} \n                        src={this.props.modalSrc} \n                        height=\"100%\"\n                        width=\"100%\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\nexport default VidModal;","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Image.js",["109"],"import React, { Component } from 'react';\nimport '../App.css';\n\nclass Image extends Component {\n\n    render() {\n        return (\n            <figure className=\"item\">\n                <img \n                    src={this.props.image.src} \n                    id={this.props.image.id} \n                    width = \"200\"\n                    onClick={this.props.openModal.bind(this, this.props.image.id, this.props.image.src)}\n                />\n            </figure>\n        );\n    }\n}\nexport default Image;","/Users/alexiscole/Documents/cs185/cs185_react/src/components/Video.js",["110"],"import React, { Component } from 'react';\nimport '../App.css';\n\nclass Video extends Component {\n\n    render () {\n        return (\n            <div className=\"item\" onClick={this.props.openModal.bind(this, this.props.video.id, this.props.video.src)}>\n                <iframe \n                    id={this.props.video.id} \n                    className=\"video\" \n                    src={this.props.video.src} \n                    height=\"250\"\n                    width=\"250\"\n                />\n            </div>\n        );\n    }\n}\nexport default Video;","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Zoom.js",["111","112"],"import { useState, useEffect } from 'react';\nimport './Zoom.css';\nimport Tasks from './Tasks';\nimport AddTask from './AddTask';\nimport Header from './Header';\nimport UpdateTask from './UpdateTask';\n\nconst Zoom = () => {\n    const [tasks, setTasks] = useState([])\n    const [showFullSchedule, setShowFullSchedule] = useState(true)\n    const [showUpdate, setShowUpdate] = useState(false)\n    const [updateId, setUpdateId] = useState(\"\")\n\n    useEffect(() => {\n        const getTasks = async () => {\n            const tasksFromServer = await fetchTasks()\n            setTasks(tasksFromServer)\n        }\n        getTasks()\n    }, [])\n\n    const fetchTasks = async () => {\n        const res = await fetch('http://localhost:5000/tasks')\n        const data = await res.json()\n        return data\n    }\n\n    const fetchTask = async (id) => {\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\n        const data = await res.json()\n        return data\n    }\n\n    const deleteTask = async (id) => {\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {method:'DELETE'})\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    const addTask = async (task) => {\n        const res = await fetch('http://localhost:5000/tasks', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(task),\n        })\n        const data = await res.json()\n        setTasks([...tasks, data])\n    }\n\n    const updateTask = async ({title, day, important, textInfor}) => {\n        const taskToToggle = await fetchTask(updateId)\n        const updTask = { ...taskToToggle, important: !taskToToggle.important}\n        const res = await fetch(`http://localhost:5000/tasks/${updateId}`, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(updTask),\n        })\n        const data = await res.json()\n        setTasks(\n            tasks.map((task) =>\n                task.id === updateId ? { updateId, title, day, important, textInfor} : task\n            )\n        )\n    }\n\n    return (\n        <div className='zoom-container'>\n            <Header showFullSchedule={showFullSchedule} \n            setShowFullSchedule={() => setShowFullSchedule(!showFullSchedule)}\n            setShowUpdate={() => setShowUpdate(false)}/>\n            {!showFullSchedule && <AddTask onAdd={addTask}/>}\n            {showFullSchedule && (tasks.length > 0 ? \n            <Tasks tasks={tasks} onDelete={deleteTask} onUpdate={setUpdateId} \n            showUpdate={showUpdate} setShowUpdate={() => setShowUpdate(!showUpdate)}/> :\n            <h3>No Available Meetings</h3>)}\n            {showUpdate && <UpdateTask onAdd={updateTask} fetchTask={fetchTask}\n            setShowUpdate={() => setShowUpdate(!showUpdate)} updateId={updateId}/>}\n        </div>\n\n    )\n}\n\nexport default Zoom","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/AddTask.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Tasks.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Header.js",[],"/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/UpdateTask.js",["113"],"import { useState, useEffect } from 'react';\nimport \"./Zoom.css\";\n\nconst UpdateTask = ({onAdd, setShowUpdate, fetchTask, updateId}) => {\n    const [title, setTitle] = useState('')\n    const [day, setDay] = useState('')\n    const [important, setImportant] = useState(false)\n    const [textInfor, setTextInfor] = useState('')\n\n    useEffect(() => {\n        const getTask = async () => {\n            console.log(updateId)\n            const taskFromServer = await fetchTask(updateId)\n            console.log(taskFromServer)\n            setTitle(taskFromServer.title)\n            setDay(taskFromServer.day)\n            setImportant(taskFromServer.important)\n            setTextInfor(taskFromServer.textInfor)\n        }\n        getTask(updateId)\n    },[])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        // error handling\n        if(!title) {\n            alert(\"Meeting must have a title!\")\n            return\n        }\n        if(!day) {\n            alert(\"Meeting must have a date!\")\n            return \n        }\n        if(!textInfor) {\n            alert(\"Meeting must have a Zoom link!\")\n            return \n        }\n        if(title.length > 30) {\n            alert(\"Meeting title must be shorter than 30 characters!\")\n            return\n        }\n        var today = new Date().getDate()\n        if(Number(day.substr(8,2)) <= today) {\n            alert(\"Meeting date must later than today!\")\n            return\n        }\n        if(!(textInfor.includes(\"zoom\"))) {\n            alert(\"Invalid zoom link!\")\n            return\n        }\n        \n        onAdd({title, day, important, textInfor})\n        setShowUpdate()\n        setTitle('')\n        setDay('')\n        setImportant(false)\n        setTextInfor('')\n    }\n\n    return (\n        <form className=\"addTask\" onSubmit={onSubmit}>\n            <div className=\"addTask-element\">\n                <label>Meeting</label>\n                <input type='text' placeholder='Update Task'\n                value={title} onChange={(e) => setTitle(e.target.value)}/>\n            </div>\n            <div className=\"addTask-element\">\n                <label>Date</label>\n                <input type='datetime-local' value={day} onChange={(e) => setDay(e.target.value)}/>\n            </div>\n            <div className=\"addTask-element\">\n                <label>Zoom Link</label>\n                <input type='url' value={textInfor} onChange={(e) => setTextInfor(e.target.value)}/>\n            </div>\n            <div className=\"addTask-check\">\n                <label>Important</label>\n                <input type='checkbox' checked={important} value={important}\n                onChange={(e) => setImportant(e.currentTarget.checked)}/>\n            </div>\n            <input className=\"btn\" type='submit' value='Update Meeting'/>\n        </form>\n    )\n}\nexport default UpdateTask","/Users/alexiscole/Documents/cs185/cs185_react/src/components/ZoomManager/Task.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":26,"column":21,"nodeType":"120","endLine":26,"endColumn":109},{"ruleId":"121","severity":1,"message":"122","line":25,"column":21,"nodeType":"120","endLine":30,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":9,"column":17,"nodeType":"120","endLine":14,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":9,"column":17,"nodeType":"120","endLine":15,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":35,"column":15,"nodeType":"125","messageId":"126","endLine":35,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":61,"column":15,"nodeType":"125","messageId":"126","endLine":61,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":21,"column":7,"nodeType":"130","endLine":21,"endColumn":9,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchTask' and 'updateId'. Either include them or remove the dependency array. If 'fetchTask' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [fetchTask, updateId]",{"range":"137","text":"138"},[746,748],"[fetchTask, updateId]"]